server:
  port: 8080 # 后端服务端口

spring:
  application:
    name: school-management-backend
  # --- Database Configuration ---
  datasource:
    url: jdbc:mysql://localhost:3988/school_db?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource # 使用 Hikari 连接池
    hikari:
      connection-timeout: 30000 # 连接超时时间: 30秒
      idle-timeout: 600000 # 空闲连接超时时间: 10分钟
      max-lifetime: 1800000 # 连接最大生存时间: 30分钟
      maximum-pool-size: 10 # 最大连接数
      minimum-idle: 5 # 最小空闲连接数

  # --- Redis Configuration ---
  data:
    redis:
      host: 127.0.0.1
      port: 6379
      # password: # 如果你的 Redis 有密码，在这里配置
      database: 0 # 使用 0 号数据库
      lettuce:
        pool:
          max-active: 8 # 最大连接数
          max-idle: 8 # 最大空闲连接数
          min-idle: 0 # 最小空闲连接数
          max-wait: -1ms # 连接池最大阻塞等待时间（负数表示没限制）

# --- MyBatis Plus Configuration ---
mybatis-plus:
  # Mapper XML 文件位置
  mapper-locations: classpath*:/mapper/**/*.xml
  # 实体类别名扫描包
  type-aliases-package: com.school.entity
  configuration:
    # 开启驼峰命名转换: Table{create_time} -> Entity{createTime}
    map-underscore-to-camel-case: true
    # 配置日志实现，开发环境推荐使用 STDOUT_LOGGING
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 逻辑删除字段配置（需要实体类有对应字段并加 @TableLogic 注解）
      logic-delete-field: deleted # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      # # 主键生成策略 (如果需要非自增主键)
      # id-type: ASSIGN_ID # 使用雪花算法生成ID (需要相应配置)
    # # 元数据处理，用于自动填充创建/修改时间等 (需要实现 MetaObjectHandler)
    # meta-object-handler: com.school.config.MyMetaObjectHandler

  jackson:
    # --- Jackson Configuration ---
    date-format: yyyy-MM-dd HH:mm:ss # Default format for serialization (sending to frontend)
    time-zone: GMT+8       # Or your preferred time zone
    deserialization:
      # This property allows Jackson to try multiple formats if the main one fails.
      # However, it's generally better to configure custom deserializers or use @JsonFormat for specific needs.
      # A simpler approach for LocalDateTime might be to just rely on its default parsing which handles ISO.
      # Let's remove @JsonFormat from the entity instead and rely on default ISO handling for now.
      # accept-multiple-date-formats: true # Might not work directly for LocalDateTime, requires more setup 